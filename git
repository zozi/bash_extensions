alias gh='more $BASH_PROFILE_EXTENSIONS/git'

alias gdm='git diff HEAD | $EDITOR'

#     git diff origin/mybranch     # diff local copy against this branch   # note that --unified=<number of lines of context around diff>

#     git commit -a -m "oh so good"   # -a will include new files not yet 'git added' as well as modified files"

#     git checkout -b mybranch            # creates 'mybranch' from current state
#     git checkout mybranch               # switches to mybranch

#     git branch -a -v                        # list branches

#     git branch -d deadbranch             # delete branch 
  
#     git branch --track release_003 origin/release_003   # creates local branch which tracks remote branch

#     git add *                        # add all files and dirs  
#     git add -i                        # interactively add files

# tagging
#    git tag release_1           # makes a "lightweight tag"
#    git tag -a -m "yay!" rel_1  # makes a "tag object" -- which can be git described
#    git tag -l                  # list tags
#    git tag -d release_1        # delete tag
#    git push --tags

# reverting
#   git reset --hard
#   git checkout app/views/nodes/edit.rhtml    # revert to the version of this file in the repo
#   git reset 6be3e0dee6f72a1e1bfacadf7e0c34a724954286

# merging 
#   git merge origin/master  
#   git cherry-pick e00fd03      # apply a single commit 
#   git add script/deploy        # removes conflicting state on file, like "svn resolved"

# cleaning
#   git clean -f                 # remove untracked files, except those ignored by .gitignore

# stashing changes before changing branches
#   git stash                    # stash changes and do 'git reset --hard'
#   git stash apply              # apply stashed changes (normally to another branch)

